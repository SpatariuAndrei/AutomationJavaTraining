// Generated by Selenium IDE
import org.hamcrest.core.Is;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static java.lang.Thread.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.json.JsonException;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;


import java.lang.reflect.InvocationTargetException;
import java.util.*;
import java.util.concurrent.TimeUnit;

public class TestcC {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    private LoginPage lp;
    private HomePage homePage;
    private ResealdPage resigilate;
    private ProductPage product;
    private CartPage cart;
    private NormalProduct np;
    private SearchPage searchPage;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        lp = new LoginPage(driver);
        homePage = new HomePage((driver));
        resigilate = new ResealdPage(driver);
        product=new ProductPage(driver);
        np=new NormalProduct(driver);
        cart=new CartPage(driver);
        searchPage=new SearchPage(driver);

        lp.login();
        vars.put("window_handles", driver.getWindowHandles());
        vars.put("win3788", waitForWindow(2000));

    }


    @After
    public void tearDown() {
        String cartURL="https://www.emag.ro/cart/products?ref=cart";
        if(!(driver.getCurrentUrl().equals(cartURL))){
            driver.navigate().to(cartURL);
        }
        try{
            cart.getContainer();                            //If container is not found it means there are no elements in cart, so we quit the page
            for (WebElement item : cart.getItmes()) {       //And if container is found we delete all products with the foreach structure in the left side;
                item.findElement(By.xpath(".//a[@class='emg-right remove-product btn-remove-product gtm_rp080219']")).click();
            }
        }catch(Exception e){

        }
       /* if(cart.getContainer().isEnabled()) {
            for (WebElement item : cart.getItmes()) {
                item.findElement(By.xpath(".//a[@class='emg-right remove-product btn-remove-product gtm_rp080219']")).click();
            }
        }*/
        driver.quit();
    }


    public String waitForWindow(int timeout) {
        try {
            sleep(timeout);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        Set<String> whNow = driver.getWindowHandles();
        Set<String> whThen = (Set<String>) vars.get("window_handles");
        if (whNow.size() > whThen.size()) {
            whNow.removeAll(whThen);
        }
        return whNow.iterator().next();
    }

    @Test
    public void testblank() {
        assertThat(false, is(true));

    }

    @Test
    public void test1() {
        driver.get("https://www.toolsqa.com/automation-practice-form/");
        driver.manage().window().maximize();
        js.executeScript("window.scrollTo(0,200)");
        driver.findElement(By.name("firstname")).click();
        driver.findElement(By.name("firstname")).sendKeys("Alexandru");
        driver.findElement(By.name("lastname")).sendKeys("Nesan");
        driver.findElement(By.id("submit")).click();
        js.executeScript("window.scrollTo(0,1100)");
        driver.findElement(By.name("firstname")).click();
        driver.findElement(By.name("firstname")).sendKeys("Alexandru");
        driver.findElement(By.name("lastname")).sendKeys("Nesan");
        driver.findElement(By.id("sex-0")).click();
        driver.findElement(By.id("exp-0")).click();
        driver.findElement(By.id("datepicker")).click();
        driver.findElement(By.id("datepicker")).sendKeys("04/06/2019");
        driver.findElement(By.id("profession-1")).click();
        driver.findElement(By.cssSelector(".control-group:nth-child(40)")).click();
        driver.findElement(By.id("tool-1")).click();
        driver.findElement(By.id("continents")).click();
        {
            WebElement dropdown = driver.findElement(By.id("continents"));
            dropdown.findElement(By.xpath("//option[. = 'Europe']")).click();
        }
        driver.findElement(By.id("continents")).click();
        driver.findElement(By.id("selenium_commands")).click();
        Select select = new Select(driver.findElement(By.id("selenium_commands")));
        select.selectByVisibleText("WebElement Commands");
        WebElement we1 = driver.findElement(By.id("submit"));
        we1.click();
        System.out.println(we1.toString());
        js.executeScript("window.scrollTo(0,59.20000076293945)");
    }

    @Test
    public void test2() {
        driver.get("https://www.toolsqa.com/automation-practice-form/");
        driver.manage().window().maximize();
        js.executeScript("window.scrollTo(0,200)");
        driver.findElement(By.xpath("//*[@id=\"content\"]/div[1]/div/div/div/div[2]/div/form/fieldset/div[5]/a/strong")).click();
        driver.findElement(By.xpath("/html/body/div[1]/div[5]/div[2]/div/div/table/tbody/tr[1]/td[6]/a")).click();
    }

    @Test
    public void testEmagNewsletter() throws InterruptedException {

        vars.put("window_handles", driver.getWindowHandles());
        vars.put("win3788", waitForWindow(2000));
        // WebElement we=homePage.getContulMeu();
        homePage.getNewsletter().click();
        assertEquals("https://www.emag.ro/subscribe/newsletter?ref=hdr_newsletter",driver.getCurrentUrl());

    }

    @Test
    public void testEmagMegaMenu() {
        vars.put("window_handles", driver.getWindowHandles());
        vars.put("win3788", waitForWindow(2000));
        Actions action = new Actions(driver);
        try {
            action.moveToElement(homePage.getOptiuneProduse()).perform();
            action.moveToElement(homePage.getElectrocasnice()).build().perform();
            Thread.sleep(200);
            homePage.getMaisni().click();
        } catch (JsonException | InterruptedException e) {
        }
        assertTrue(driver.getCurrentUrl().toLowerCase().contains("masini"));


    }
    @Test
    public void testFlow() throws InterruptedException {
        homePage.getResigilate().click();

        sleep(3000);
        resigilate.getProduct().click();
        sleep(3000);
        product.getBuyResealedButton().click();
        product.getClose().click();
        js.executeScript("window.scrollTo(0,1500)");
       // product.getProdusNeredus().click();
        np.getAdaugaInCos().click();
        np.getClose().click();
        String normalPrice=np.getProductPrice();
        //System.out.println(np.getPrice().getText());
        js.executeScript("window.scrollTo(0,1)");
        np.getMyCart().click();
    }
    @Test
    public void testAdaugareProdusPretNormal(){

        homePage.getSearchBar().sendKeys("aer conditionat");
        homePage.getSearchButton().click();
        js.executeScript("window.scrollTo(0,1400)");
        try {
            sleep(500);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        driver.findElement(By.xpath("/html/body/div[2]/div[2]/div/section[1]/div/div[3]/div[2]/div[5]/div[10]/div[2]/div/div[1]/div[1]/a/div/img")).click();
        js.executeScript("window.scrollTo(0,300)");
        try {
            sleep(500);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        np.getAdaugaInCos().click();
        np.getClose().click();
        String normalPrice=np.getProductPrice();
        js.executeScript("window.scrollTo(0,1)");
        np.getMyCart().click();

        Product produsCos=cart.getProduct(1);

        assertEquals(normalPrice,produsCos.getNewPrice());
    }

    @Test
    public void testAdaugareProdusRedus(){

        homePage.getSearchBar().sendKeys("aer conditionat");
        homePage.getSearchButton().click();


        searchPage.getReducedProduct().click();
        Product originalProduct=product.elementToProduct();
        //originalProduct=product.elementToProduct();
        js.executeScript("window.scrollTo(0,400)");
        np.getAdaugaInCosRedus().click();
        np.getClose().click();


        js.executeScript("window.scrollTo(0,1)");
        np.getMyCart().click();

        Product cartProduct=cart.getProduct(1);
 //      assertEquals(originalProduct.getNewPrice(),cartProduct.getNewPrice());
    }
}
